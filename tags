!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/663bfb1c/
%%	settings.json	/^                "%%": "gradient(72)",$/;"	s	object:THEMES.draculite.message_styles
*	settings.json	/^                "*": "italic",$/;"	s	object:THEMES.draculite.message_styles
**	settings.json	/^                "**": "bold",$/;"	s	object:THEMES.draculite.message_styles
***	settings.json	/^                "***": "italic(bold())",$/;"	s	object:THEMES.draculite.message_styles
0	settings.json	/^                "<>",$/;"	s	array:THEMES.draculite.ui__prompt_options__delimiters
0	settings.json	/^                "minimal",$/;"	s	array:THEMES.draculite.ui__prompt_options_highlight
0	settings.json	/^        "draculite"$/;"	s	array:ui__prompt_options__colorscheme
0	settings.json	/^        true,$/;"	b	array:ui__prompt_options__debug
0	settings.json	/^        true,$/;"	b	array:ui__prompt_options__keep_cursor
0	settings.json	/^        true,$/;"	b	array:ui__prompt_options__vimmode
06:06 PM	devlog.md	/^## 06:06 PM$/;"	s	chapter:2021/01/06
1	settings.json	/^                "[]",$/;"	s	array:THEMES.draculite.ui__prompt_options__delimiters
1	settings.json	/^                "custom"$/;"	s	array:THEMES.draculite.ui__prompt_options_highlight
1	settings.json	/^        false$/;"	b	array:ui__prompt_options__debug
1	settings.json	/^        false$/;"	b	array:ui__prompt_options__keep_cursor
1	settings.json	/^        false$/;"	b	array:ui__prompt_options__vimmode
11:33 PM	devlog.md	/^## 11:33 PM$/;"	s	chapter:2021/01/06
2	settings.json	/^                "{}",$/;"	s	array:THEMES.draculite.ui__prompt_options__delimiters
2020/12/20	devlog.md	/^# 2020\/12\/20$/;"	c
2020/12/22	devlog.md	/^# 2020\/12\/22$/;"	c
2021/01/06	devlog.md	/^# 2021\/01\/06$/;"	c
2021/01/11	devlog.md	/^# 2021\/01\/11$/;"	c
3	settings.json	/^                null$/;"	z	array:THEMES.draculite.ui__prompt_options__delimiters
BASEBINDS	settings.json	/^    "BASEBINDS": {$/;"	o
BASE_DATA	client.py	/^BASE_DATA = {$/;"	v
BIND system	docs.md	/^## BIND system$/;"	s	chapter:documentation
BUGS	README.md	/^# BUGS$/;"	c
BUGS	notes.md	/^# BUGS$/;"	c
CONTAINER_BORDER_CHARS	pytermgui.py	/^CONTAINER_BORDER_CHARS = lambda: "|-"$/;"	f
CONTAINER_BORDER_STYLE	pytermgui.py	/^CONTAINER_BORDER_STYLE = lambda item: item$/;"	f
CONTAINER_CORNER_STYLE	pytermgui.py	/^CONTAINER_CORNER_STYLE = lambda char: char$/;"	f
CONTAINER_CORNER_STYLE	pytermgui.py	/^CONTAINER_CORNER_STYLE = lambda item: item$/;"	f
CONTAINER_ERROR_STYLE	pytermgui.py	/^CONTAINER_ERROR_STYLE = lambda item: Color.color(Color.bold(item),'38;5;196')$/;"	f
CONTAINER_LABEL_STYLE	pytermgui.py	/^CONTAINER_LABEL_STYLE = lambda item: item$/;"	f
CONTAINER_SUCCESS_STYLE	pytermgui.py	/^CONTAINER_SUCCESS_STYLE = lambda item: Color.color(Color.bold(item),'2')$/;"	f
CONTAINER_TITLE_STYLE	pytermgui.py	/^CONTAINER_TITLE_STYLE = lambda item: Color.italic(Color.bold(item))$/;"	f
CONTAINER_VALUE_STYLE	pytermgui.py	/^CONTAINER_VALUE_STYLE = lambda item: item$/;"	f
CONV_HEADER	client.py	/^    CONV_HEADER = Container(width=int(WIDTH*0.75),dynamic_size=False)$/;"	v
CONV_HEADER_LABEL	client.py	/^    CONV_HEADER_LABEL = Label(justify='center')$/;"	v
CURRENT_CHATROOM	client.py	/^        CURRENT_CHATROOM = None$/;"	v
CURRENT_FILE	client.py	/^CURRENT_FILE = None$/;"	v
CURSOR_HIGHLIGHT_STYLE	pytermgui.py	/^CURSOR_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE$/;"	v
Color	pytermgui.py	/^class Color:$/;"	c
Container	pytermgui.py	/^class Container:$/;"	c
DEFAULT_COLOR_PREFIX	pytermgui.py	/^DEFAULT_COLOR_PREFIX = "38;5"$/;"	v
DELIMITERS	client.py	/^DELIMITERS = "!@#$%^&*()[]{}|\\\\;':\\",.<>\/? \\t"$/;"	v
DO_DEBUG	settings.json	/^    "DO_DEBUG": true,$/;"	b
ELEMENT_ATTRIBUTES	pytermgui.py	/^ELEMENT_ATTRIBUTES = {}$/;"	v
ELEMENT_IDS	pytermgui.py	/^ELEMENT_IDS = {}$/;"	v
ESCAPE	settings.json	/^        "ESCAPE": {$/;"	o	object:VIMBINDS
ESCAPE	settings.json	/^        "ESCAPE": {},$/;"	o	object:BASEBINDS
ESCAPE_KEY	settings.json	/^    "ESCAPE_KEY": "ESC",$/;"	s
Extensions	docs.md	/^## Extensions$/;"	s	chapter:documentation
FEATURES	README.md	/^# FEATURES $/;"	c
FEATURES	notes.md	/^# FEATURES $/;"	c
FILETYPE_DEFAULTS	settings.json	/^    "FILETYPE_DEFAULTS": {$/;"	o
GLOBAL_HIGHLIGHT_STYLE	pytermgui.py	/^GLOBAL_HIGHLIGHT_STYLE = Color.highlight$/;"	v
HEIGHT	pytermgui.py	/^WIDTH,HEIGHT = os.get_terminal_size()$/;"	v
INPUT	client.py	/^INPUT = ""$/;"	v
INPUT_CURSOR	client.py	/^INPUT_CURSOR = 0$/;"	v
INSERT	settings.json	/^        "INSERT": {$/;"	o	object:BASEBINDS
INSERT	settings.json	/^        "INSERT": {$/;"	o	object:VIMBINDS
Important notes	docs.md	/^### Important notes$/;"	S	section:documentation""Variables
InputDialog	client.py	/^class InputDialog(Container):$/;"	c
InputDialogField	client.py	/^class InputDialogField(getch.InputField):$/;"	c
InputField	getch.py	/^class InputField:$/;"	c
KEEP_CURSOR_AFTER_SELECT	settings.json	/^    "KEEP_CURSOR_AFTER_SELECT": true,$/;"	b
KEEP_GOING	client.py	/^KEEP_GOING = True$/;"	v
KEEP_PIPE	client.py	/^KEEP_PIPE = False$/;"	v
Key for values	docs.md	/^### Key for values$/;"	S	section:documentation""BIND system
LABEL_VALUE_STYLE	pytermgui.py	/^LABEL_VALUE_STYLE = lambda item: item$/;"	f
LOGFILE	client.py	/^LOGFILE = os.path.join(PATH,'log')$/;"	v
Label	pytermgui.py	/^class Label:$/;"	c
MAX_MESSAGE_WIDTH	client.py	/^MAX_MESSAGE_WIDTH = lambda: int(WIDTH*4\/10)$/;"	f
MENUS	client.py	/^MENUS = [$/;"	v
MESSAGES	client.py	/^MESSAGES = []$/;"	v
MESSAGE_SEPARATE_TIME	settings.json	/^    "MESSAGE_SEPARATE_TIME": "60",$/;"	s
MESSAGE_TEMPLATE	client.py	/^MESSAGE_TEMPLATE = {$/;"	v
MODE_LABEL	client.py	/^    MODE_LABEL = ModeLabel(value='-- ESCAPE --',justify='left')$/;"	v
ModeLabel	client.py	/^class ModeLabel(Label):$/;"	c
OSReadWrapper	getch.py	/^class OSReadWrapper(object):$/;"	c
PATH	client.py	/^PATH = os.path.abspath(os.path.dirname(__file__))$/;"	v
PIPE_ARGS	client.py	/^PIPE_ARGS = {}$/;"	v
PIPE_OUTPUT	client.py	/^PIPE_OUTPUT = None$/;"	v
PREV_GET	client.py	/^PREV_GET = None$/;"	v
PREV_MESSAGE	client.py	/^PREV_MESSAGE = None$/;"	v
PREV_MESSAGES	client.py	/^PREV_MESSAGES = []$/;"	v
PROMPT_DELIMITER_STYLE	pytermgui.py	/^PROMPT_DELIMITER_STYLE = lambda: '[]'$/;"	f
PROMPT_HIGHLIGHT_STYLE	pytermgui.py	/^PROMPT_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE$/;"	v
PROMPT_LABEL_STYLE	pytermgui.py	/^PROMPT_LABEL_STYLE = lambda item: item$/;"	f
PROMPT_VALUE_STYLE	pytermgui.py	/^PROMPT_VALUE_STYLE = lambda item: item$/;"	f
Prompt	pytermgui.py	/^class Prompt:$/;"	c
SELECTED_THEME	settings.json	/^    "SELECTED_THEME": "draculite",$/;"	s
SENDING	client.py	/^SENDING = []$/;"	v
SESSION	client.py	/^            SESSION = pickle.load(f)$/;"	v
SESSION	client.py	/^        SESSION = requests.session()$/;"	v
SESSIONLOCATION	client.py	/^    SESSIONLOCATION = os.path.join(PATH,'session.obj')$/;"	v
TABBAR_HIGHLIGHT_STYLE	pytermgui.py	/^TABBAR_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE$/;"	v
THEMES	settings.json	/^    "THEMES": {$/;"	o
TODO	README.md	/^# TODO$/;"	c
TODO	notes.md	/^# TODO$/;"	c
TeahazHelper	client.py	/^class TeahazHelper:$/;"	c
ThreadWithReturnValue	client.py	/^class ThreadWithReturnValue(threading.Thread):$/;"	c
UIGenerator	client.py	/^class UIGenerator:$/;"	c
UI_TRACE	client.py	/^UI_TRACE = [[return_to_infield,{},'']]$/;"	v
URL	client.py	/^URL = None$/;"	v
VERBOSE	pytermgui.py	/^VERBOSE = 0$/;"	v
VIMBINDS	settings.json	/^    "VIMBINDS": {$/;"	o
VIMMODE	settings.json	/^    "VIMMODE": true,$/;"	b
VISUAL	settings.json	/^        "VISUAL": {$/;"	o	object:BASEBINDS
VISUAL	settings.json	/^        "VISUAL": {$/;"	o	object:VIMBINDS
VISUAL_END	client.py	/^VISUAL_END = 0$/;"	v
VISUAL_START	client.py	/^VISUAL_START = 0$/;"	v
Variables	docs.md	/^## Variables$/;"	s	chapter:documentation
WARNING: nothing here is stable, for now this is only early development stuff.	docs.md	/^## WARNING: nothing here is stable, for now this is only early development stuff.$/;"	s	chapter:documentation
WIDTH	pytermgui.py	/^WIDTH,HEIGHT = os.get_terminal_size()$/;"	v
_Getch	getch.py	/^class _Getch:$/;"	c
_GetchUnix	getch.py	/^class _GetchUnix:$/;"	c
_GetchWindows	getch.py	/^class _GetchWindows:$/;"	c
__	settings.json	/^                "__": "underline",$/;"	s	object:THEMES.draculite.message_styles
__call__	getch.py	/^    def __call__(self):$/;"	m	class:_Getch
__call__	getch.py	/^    def __call__(self):$/;"	m	class:_GetchUnix
__call__	getch.py	/^    def __call__(self):$/;"	m	class:_GetchWindows
__init__	client.py	/^    def __init__(self):$/;"	m	class:TeahazHelper
__init__	client.py	/^    def __init__(self,**kwargs):$/;"	m	class:InputDialogField
__init__	client.py	/^    def __init__(self,**kwargs):$/;"	m	class:ModeLabel
__init__	client.py	/^    def __init__(self,**kwargs):$/;"	m	class:ThreadWithReturnValue
__init__	client.py	/^    def __init__(self,options=None,label_value='',label_justify="center",label_underpad=0,field_/;"	m	class:InputDialog
__init__	getch.py	/^    def __init__(self):$/;"	m	class:_Getch
__init__	getch.py	/^    def __init__(self):$/;"	m	class:_GetchUnix
__init__	getch.py	/^    def __init__(self):$/;"	m	class:_GetchWindows
__init__	getch.py	/^    def __init__(self, stream, encoding=None):$/;"	m	class:OSReadWrapper
__init__	getch.py	/^    def __init__(self,pos=None,linecap=0,default="",xlimit=None,ylimit=None,print_at_start=False/;"	m	class:InputField
__init__	pytermgui.py	/^    def __init__(self,pos=None,border=None,width=None,height=None,dynamic_size=True,center_eleme/;"	m	class:Container
__init__	pytermgui.py	/^    def __init__(self,value="",justify="center",width=None,padding=1):$/;"	m	class:Label
__init__	pytermgui.py	/^    def __init__(self,width=None,options=None,label=None,real_label=None,justify_options='center/;"	m	class:Prompt
__repr__	client.py	/^    def __repr__(self):$/;"	m	class:InputDialog
__repr__	client.py	/^    def __repr__(self):$/;"	m	class:InputDialogField
__repr__	client.py	/^    def __repr__(self):$/;"	m	class:ModeLabel
__repr__	pytermgui.py	/^    def __repr__(self):$/;"	m	class:Container
__repr__	pytermgui.py	/^    def __repr__(self):$/;"	m	class:Label
__repr__	pytermgui.py	/^    def __repr__(self):$/;"	m	class:Prompt
_add_element	pytermgui.py	/^    def _add_element(self,element):$/;"	m	class:Container
_connect	client.py	/^    def _connect(*args,**kwargs):$/;"	f	function:start_connection	file:
_do_operation	client.py	/^        def _do_operation(*args,**kwargs):$/;"	f	member:TeahazHelper.handle_operation	file:
_get_option_highlight	pytermgui.py	/^    def _get_option_highlight(self,index):$/;"	m	class:Prompt
_handle_long_element	pytermgui.py	/^    def _handle_long_element(self,e):$/;"	m	class:Container
_repr_pre	pytermgui.py	/^    def _repr_pre(self):$/;"	m	class:Container
_selection_changed	pytermgui.py	/^    def _selection_changed(self,index):$/;"	m	class:Container
_window_size_changed	pytermgui.py	/^    def _window_size_changed(self):$/;"	m	class:Container
`	settings.json	/^                "`": "italic(color(102))"$/;"	s	object:THEMES.draculite.message_styles
add_elements	pytermgui.py	/^    def add_elements(self,elements):$/;"	m	class:Container
add_new_colorscheme	client.py	/^def add_new_colorscheme(name="new") -> dict:$/;"	f	typeref:typename:dict
add_new_server	client.py	/^    def add_new_server(self,values):$/;"	m	class:TeahazHelper
add_to_trace	client.py	/^def add_to_trace(arr) -> None:$/;"	f	typeref:typename:None
bold	client.py	/^bold           =  Color.bold$/;"	v
bold	pytermgui.py	/^    def bold(s):$/;"	m	class:Color
border	settings.json	/^            "border": "60",$/;"	s	object:THEMES.draculite
border_chars	settings.json	/^            "border_chars": "\\u2502\\u2500",$/;"	s	object:THEMES.draculite
bottom_left	settings.json	/^                "bottom_left": "\\u2514",$/;"	s	object:THEMES.draculite.corners
bottom_right	settings.json	/^                "bottom_right": "\\u2518"$/;"	s	object:THEMES.draculite.corners
break_line	pytermgui.py	/^def break_line(_inline,_len,_pad=0,_separator=' ',do_subdivision=True):$/;"	f
buffer	getch.py	/^    def buffer(self):$/;"	m	class:OSReadWrapper
c	pytermgui.py	/^    c = container_from_dict(d)[0]$/;"	v
center	pytermgui.py	/^    def center(self,axes="both",xoffset=0,yoffset=5):$/;"	m	class:Container
change_in	settings.json	/^            "change_in": "ci",$/;"	s	object:VIMBINDS.ESCAPE
change_line_end	settings.json	/^            "change_line_end": "C",$/;"	s	object:VIMBINDS.ESCAPE
change_word_end	settings.json	/^            "change_word_end": "cw",$/;"	s	object:VIMBINDS.ESCAPE
character_delete	settings.json	/^            "character_delete": "x",$/;"	s	object:VIMBINDS.ESCAPE
chatroom	client.py	/^        url,chatroom = CURRENT_CHATROOM$/;"	v
clean_ansi	pytermgui.py	/^def clean_ansi(s):$/;"	f
clear_value	getch.py	/^    def clear_value(self):$/;"	m	class:InputField
clip	client.py	/^import pyperclip as clip$/;"	I	nameref:module:pyperclip
clr	pytermgui.py	/^def clr():$/;"	f
color	client.py	/^color          =  Color.color$/;"	v
color	pytermgui.py	/^    def color(s,col,reset=True):$/;"	m	class:Color
container_from_dict	pytermgui.py	/^def container_from_dict(dic,padding=4,**kwargs):$/;"	f
context	getch.py	/^    def context(self):$/;"	m	class:_GetchUnix
copy_line	settings.json	/^            "copy_line": "yy",$/;"	s	object:VIMBINDS.ESCAPE
corners	pytermgui.py	/^    corners = ["┌","┐","└","┘"]$/;"	v
corners	settings.json	/^            "corners": {$/;"	o	object:THEMES.draculite
create_address_picker	client.py	/^    def create_address_picker(self,caller_prompt):$/;"	m	class:UIGenerator
create_colormenu	client.py	/^    def create_colormenu(self,dict_index=0):$/;"	m	class:UIGenerator
create_error_dialog	client.py	/^    def create_error_dialog(self,text,button="ignore",handler=None):$/;"	m	class:UIGenerator
create_menu	client.py	/^    def create_menu(self,source,corners=[None]*4,width=None,index=None,dict_index=0,**container_/;"	m	class:UIGenerator
create_menu_picker	client.py	/^    def create_menu_picker(self):$/;"	m	class:UIGenerator
create_server_picker	client.py	/^    def create_server_picker(self):$/;"	m	class:UIGenerator
create_submenu	client.py	/^    def create_submenu(self,source,index=None,dict_index=0):$/;"	m	class:UIGenerator
create_success_dialog	client.py	/^    def create_success_dialog(self,text,button="dismiss"):$/;"	m	class:UIGenerator
custom_prompt_highlight	settings.json	/^            "custom_prompt_highlight": "highlight(72)",$/;"	s	object:THEMES.draculite
d	pytermgui.py	/^    d = d[0]$/;"	v
d	pytermgui.py	/^    d = r.json()$/;"	v
dbg	client.py	/^def dbg(*args,do_color=True) -> None:$/;"	f	typeref:typename:None
dbg	pytermgui.py	/^def dbg(*args,**kwargs):$/;"	f
decode	client.py	/^def decode(a):$/;"	f
delete_in	settings.json	/^            "delete_in": "di",$/;"	s	object:VIMBINDS.ESCAPE
delete_line	settings.json	/^            "delete_line": "dd"$/;"	s	object:VIMBINDS.ESCAPE
delete_line_end	settings.json	/^            "delete_line_end": "D",$/;"	s	object:VIMBINDS.ESCAPE
delete_word_end	settings.json	/^            "delete_word_end": "dw",$/;"	s	object:VIMBINDS.ESCAPE
do_after	client.py	/^def do_after(ms,fun,control='true',args={}) -> None:$/;"	f	typeref:typename:None
do_in	client.py	/^def do_in(param, action) -> None:$/;"	f	typeref:typename:None
documentation	docs.md	/^# documentation$/;"	c
draculite	settings.json	/^        "draculite": {$/;"	o	object:THEMES
edit_json	client.py	/^def edit_json(json_path,key,value) -> None:$/;"	f	typeref:typename:None
empty_dict	client.py	/^    def empty_dict(d) -> dict:$/;"	f	function:add_new_colorscheme	typeref:typename:dict	file:
encode	client.py	/^def encode(a):$/;"	f
encode_binary	client.py	/^def encode_binary(a):$/;"	f
error	settings.json	/^            "error": "203",$/;"	s	object:THEMES.draculite
event__window_size_changed	pytermgui.py	/^def event__window_size_changed(caller,new,old):$/;"	f
export	pytermgui.py	/^    def export(self,filename):$/;"	m	class:Container
extension basics	devlog.md	/^## extension basics$/;"	s	chapter:2020/12/20
extension details	devlog.md	/^## extension details$/;"	s	chapter:2020/12/20
fade	settings.json	/^            "fade": "238",$/;"	s	object:THEMES.draculite
field_highlight	settings.json	/^            "field_highlight": "gradient(72)",$/;"	s	object:THEMES.draculite
fileno	getch.py	/^    def fileno(self):$/;"	m	class:OSReadWrapper
find	client.py	/^def find(key,offset=0,reverse=False) -> None:$/;"	f	typeref:typename:None
find	settings.json	/^            "find": "f",$/;"	s	object:VIMBINDS.ESCAPE
find	settings.json	/^            "find": "f",$/;"	s	object:VIMBINDS.VISUAL
find_reverse	settings.json	/^            "find_reverse": "F",$/;"	s	object:VIMBINDS.ESCAPE
finished	README.md	/^## finished$/;"	s	chapter:FEATURES
finished	notes.md	/^## finished$/;"	s	chapter:FEATURES
get	client.py	/^    def get(self,parameter,mode="message"):$/;"	m	class:TeahazHelper
get_border	pytermgui.py	/^    def get_border(self):$/;"	m	class:Container
get_caller	client.py	/^    get_caller = lambda: type(obj).__name__+'.'+method if obj else method$/;"	f	function:dbg	file:
get_caller	client.py	/^def get_caller(depth=1):$/;"	f
get_chars	getch.py	/^    def get_chars(self):$/;"	m	class:_GetchUnix
get_gradient	client.py	/^get_gradient   =  Color.get_gradient$/;"	v
get_gradient	pytermgui.py	/^    def get_gradient(include,direction='vertical'):$/;"	m	class:Color
get_index	client.py	/^def get_index(obj) -> int:$/;"	f	typeref:typename:int
get_indices	client.py	/^def get_indices(param) -> tuple:$/;"	f	typeref:typename:tuple
get_infield_pos	client.py	/^def get_infield_pos(update_modelabel=True) -> list:$/;"	f	typeref:typename:list
get_loop	client.py	/^    def get_loop(self):$/;"	m	class:TeahazHelper
get_loop	client.py	/^    get_loop = threading.Thread(target=th.get_loop,name='get_loop')$/;"	v
get_object_by_id	pytermgui.py	/^def get_object_by_id(key):$/;"	f
getch	getch.py	/^getch = _Getch()$/;"	v
getch_loop	client.py	/^def getch_loop() -> None: $/;"	f	typeref:typename:None
goto_WORD_next	settings.json	/^            "goto_WORD_next": "W",$/;"	s	object:VIMBINDS.ESCAPE
goto_WORD_prev	settings.json	/^            "goto_WORD_prev": "B",$/;"	s	object:VIMBINDS.ESCAPE
goto_cursor_left	settings.json	/^            "goto_cursor_left": "h",$/;"	s	object:VIMBINDS.ESCAPE
goto_cursor_left	settings.json	/^            "goto_cursor_left": "h",$/;"	s	object:VIMBINDS.VISUAL
goto_cursor_right	settings.json	/^            "goto_cursor_right": "l",$/;"	s	object:VIMBINDS.ESCAPE
goto_cursor_right	settings.json	/^            "goto_cursor_right": "l",$/;"	s	object:VIMBINDS.VISUAL
goto_line_-1st	settings.json	/^            "goto_line_-1st": "$",$/;"	s	object:VIMBINDS.ESCAPE
goto_line_-1st	settings.json	/^            "goto_line_-1st": "$",$/;"	s	object:VIMBINDS.VISUAL
goto_line_0th	settings.json	/^            "goto_line_0th": "0",$/;"	s	object:VIMBINDS.ESCAPE
goto_line_0th	settings.json	/^            "goto_line_0th": "0",$/;"	s	object:VIMBINDS.VISUAL
goto_line_down	settings.json	/^            "goto_line_down": "j",$/;"	s	object:VIMBINDS.ESCAPE
goto_line_down	settings.json	/^            "goto_line_down": "j",$/;"	s	object:VIMBINDS.VISUAL
goto_line_end	settings.json	/^            "goto_line_end": "g_",$/;"	s	object:VIMBINDS.ESCAPE
goto_line_end	settings.json	/^            "goto_line_end": "g_",$/;"	s	object:VIMBINDS.VISUAL
goto_line_end_i	settings.json	/^            "goto_line_end_i": "A",$/;"	s	object:VIMBINDS.ESCAPE
goto_line_end_i	settings.json	/^            "goto_line_end_i": "A",$/;"	s	object:VIMBINDS.VISUAL
goto_line_start	settings.json	/^            "goto_line_start": "^",$/;"	s	object:VIMBINDS.ESCAPE
goto_line_start	settings.json	/^            "goto_line_start": "^",$/;"	s	object:VIMBINDS.VISUAL
goto_line_start_i	settings.json	/^            "goto_line_start_i": "I",$/;"	s	object:VIMBINDS.ESCAPE
goto_line_start_i	settings.json	/^            "goto_line_start_i": "I",$/;"	s	object:VIMBINDS.VISUAL
goto_line_up	settings.json	/^            "goto_line_up": "k",$/;"	s	object:VIMBINDS.ESCAPE
goto_line_up	settings.json	/^            "goto_line_up": "k",$/;"	s	object:VIMBINDS.VISUAL
goto_text_end	settings.json	/^            "goto_text_end": "G",$/;"	s	object:VIMBINDS.ESCAPE
goto_text_start	settings.json	/^            "goto_text_start": "gg",$/;"	s	object:VIMBINDS.ESCAPE
goto_word_next	settings.json	/^            "goto_word_next": "w",$/;"	s	object:VIMBINDS.ESCAPE
goto_word_prev	settings.json	/^            "goto_word_prev": "b",$/;"	s	object:VIMBINDS.ESCAPE
gradient	client.py	/^gradient       =  Color.gradient$/;"	v
gradient	pytermgui.py	/^    def gradient(text,color,layer='fg'):$/;"	m	class:Color
handle_action	client.py	/^def handle_action(action) -> None:$/;"	f	typeref:typename:None
handle_menu	client.py	/^def handle_menu(key,obj,attributes={},page=0) -> None:$/;"	f	typeref:typename:None
handle_menu_actions	client.py	/^def handle_menu_actions(action,current_file=None) -> int: $/;"	f	typeref:typename:int
handle_operation	client.py	/^    def handle_operation(self,method,output,handler=None,*args,**kwargs):$/;"	m	class:TeahazHelper
handler	client.py	/^            handler = lambda _,self: handle_menu("ESC",self.parent)$/;"	f	member:UIGenerator.create_error_dialog	file:
highlight	client.py	/^highlight      =  Color.highlight$/;"	v
highlight	pytermgui.py	/^    def highlight(s,fg="1"):$/;"	m	class:Color
id	settings.json	/^                "id": "settings-themes_showcolors",$/;"	s	object:THEMES.draculite.ui__button
id	settings.json	/^            "id": "colorschemes-button_add",$/;"	s	object:THEMES.ui__nobutton
ignore_input	client.py	/^def ignore_input(*args):$/;"	f
image	settings.json	/^        "image": "kitty +kitten icat {path} --scale_up",$/;"	s	object:FILETYPE_DEFAULTS
import_json	client.py	/^def import_json(name) -> None:$/;"	f	typeref:typename:None
index	client.py	/^        url,index = CURRENT_CHATROOM$/;"	v
infield	client.py	/^    infield = getch.InputField(pos=get_infield_pos())$/;"	v
infield	getch.py	/^    infield = InputField(default="Welcome!")$/;"	v
intro	devlog.md	/^## intro$/;"	s	chapter:2020/12/20
is_connected	client.py	/^    def is_connected(self,url):$/;"	m	class:TeahazHelper
is_in_last_word	client.py	/^def is_in_last_word(index,string) -> bool:$/;"	f	typeref:typename:bool
is_set	client.py	/^def is_set(var,scope=None) -> bool:$/;"	f	typeref:typename:bool
italic	client.py	/^italic         =  Color.italic$/;"	v
italic	pytermgui.py	/^    def italic(s):$/;"	m	class:Color
join	client.py	/^    def join(self,timeout=None):$/;"	m	class:ThreadWithReturnValue
key	getch.py	/^        key = getch()$/;"	v
label	settings.json	/^            "label": "245",$/;"	s	object:THEMES.draculite
load_path	client.py	/^def load_path(path,key=None) -> dict:$/;"	f	typeref:typename:dict
login_or_register	client.py	/^def login_or_register(contype,url,data) -> None:$/;"	f	typeref:typename:None
menu_picker	settings.json	/^            "menu_picker": "CTRL_T",$/;"	s	object:VIMBINDS.ESCAPE
menu_server_picker	settings.json	/^            "menu_server_picker": "TAB",$/;"	s	object:VIMBINDS.ESCAPE
menu_settings	settings.json	/^            "menu_settings": "CTRL_\/",$/;"	s	object:BASEBINDS.INSERT
menu_settings	settings.json	/^            "menu_settings": "CTRL_\/",$/;"	s	object:VIMBINDS.ESCAPE
menu_settings	settings.json	/^            "menu_settings": "CTRL_\/",$/;"	s	object:VIMBINDS.INSERT
menu_settings	settings.json	/^            "menu_settings": "CTRL_\/",$/;"	s	object:VIMBINDS.VISUAL
merge	client.py	/^def merge(one,two) -> dict:$/;"	f	typeref:typename:dict
message_send	settings.json	/^            "message_send": "ENTER",$/;"	s	object:VIMBINDS.ESCAPE
message_send	settings.json	/^            "message_send": "ENTER",$/;"	s	object:VIMBINDS.INSERT
message_styles	settings.json	/^            "message_styles": {$/;"	o	object:THEMES.draculite
minimal_or_custom_highlight	client.py	/^def minimal_or_custom_highlight(item):$/;"	f
mode_escape	settings.json	/^            "mode_escape": "ESC",$/;"	s	object:VIMBINDS.INSERT
mode_escape	settings.json	/^            "mode_escape": "ESC",$/;"	s	object:VIMBINDS.VISUAL
mode_indicator	settings.json	/^            "mode_indicator": "72",$/;"	s	object:THEMES.draculite
mode_insert	settings.json	/^            "mode_insert": "ESC",$/;"	s	object:BASEBINDS.VISUAL
mode_insert	settings.json	/^            "mode_insert": "i",$/;"	s	object:VIMBINDS.ESCAPE
mode_insert+1	settings.json	/^            "mode_insert+1": "a",$/;"	s	object:VIMBINDS.ESCAPE
mode_visual	settings.json	/^            "mode_visual": "CTRL_L",$/;"	s	object:BASEBINDS.INSERT
mode_visual	settings.json	/^            "mode_visual": "v",$/;"	s	object:VIMBINDS.ESCAPE
move	pytermgui.py	/^    def move(self,pos,wipe=False):$/;"	m	class:Container
notification system	devlog.md	/^## notification system$/;"	s	chapter:2020/12/20
old_print_messages	client.py	/^    def old_print_messages(self,extras=[],reprint=False):$/;"	m	class:TeahazHelper
pad	pytermgui.py	/^        pad = lambda l: (_pad*' ' if len(l) else '')$/;"	f	function:break_line	file:
parse_color	client.py	/^def parse_color(_color,s,level=0) -> types.FunctionType:$/;"	f	typeref:typename:types.FunctionType
parse_inline_codes	client.py	/^def parse_inline_codes(s) -> str:$/;"	f	typeref:typename:str
pass	settings.json	/^            "pass": "ESC"$/;"	s	object:BASEBINDS.INSERT
paste	settings.json	/^            "paste": "CTRL_P",$/;"	s	object:BASEBINDS.INSERT
paste	settings.json	/^            "paste": "CTRL_P",$/;"	s	object:BASEBINDS.VISUAL
paste	settings.json	/^            "paste": "p",$/;"	s	object:VIMBINDS.ESCAPE
perspective	pytermgui.py	/^def perspective(color,index):$/;"	f
print	getch.py	/^    def print(self,return_line=False,flush=True,highlight=True):$/;"	m	class:InputField
print_messages	client.py	/^    def print_messages(self,messages=[],extras=[],reprint=False):$/;"	m	class:TeahazHelper
prompt_delimiters	settings.json	/^            "prompt_delimiters": null,$/;"	z	object:THEMES.draculite
prompt_highlight	settings.json	/^            "prompt_highlight": "minimal",$/;"	s	object:THEMES.draculite
quit	settings.json	/^            "quit": "q",$/;"	s	object:VIMBINDS.ESCAPE
r	pytermgui.py	/^    r = requests.get('https:\/\/online.sprinter.hu\/terkep\/data.json')$/;"	v
read	getch.py	/^    def read(self, chars):$/;"	m	class:OSReadWrapper
real_length	pytermgui.py	/^def real_length(s):$/;"	f
replace	client.py	/^def replace(key,action) -> None:$/;"	f	typeref:typename:None
replace	settings.json	/^            "replace": "r",$/;"	s	object:VIMBINDS.ESCAPE
reprint	settings.json	/^            "reprint": "CTRL_L"$/;"	s	object:VIMBINDS.INSERT
reprint	settings.json	/^            "reprint": "CTRL_L",$/;"	s	object:VIMBINDS.ESCAPE
reprint	settings.json	/^            "reprint": "CTRL_L",$/;"	s	object:VIMBINDS.VISUAL
return_to_infield	client.py	/^def return_to_infield(*args,**kwargs) -> None:$/;"	f	typeref:typename:None
reverse_dict_lookup	client.py	/^def reverse_dict_lookup(d,value) -> [dict,None]:$/;"	f	typeref:typename:[dict,None]
run	client.py	/^    def run(self):$/;"	m	class:ThreadWithReturnValue
select	pytermgui.py	/^    def select(self,index=0):$/;"	m	class:Prompt
select	pytermgui.py	/^    def select(self,index=None):$/;"	m	class:Container
select_in	settings.json	/^            "select_in": "i",$/;"	s	object:VIMBINDS.VISUAL
select_line	settings.json	/^            "select_line": "CTRL_A",$/;"	s	object:BASEBINDS.INSERT
select_line	settings.json	/^            "select_line": "V",$/;"	s	object:VIMBINDS.ESCAPE
select_word_end	settings.json	/^            "select_word_end": "w",$/;"	s	object:VIMBINDS.VISUAL
selection_change	settings.json	/^            "selection_change": "c",$/;"	s	object:VIMBINDS.VISUAL
selection_copy	settings.json	/^            "selection_copy": "c"$/;"	s	object:BASEBINDS.VISUAL
selection_copy	settings.json	/^            "selection_copy": "y"$/;"	s	object:VIMBINDS.VISUAL
selection_cut	settings.json	/^            "selection_cut": "CTRL_X",$/;"	s	object:BASEBINDS.VISUAL
selection_cut	settings.json	/^            "selection_cut": "d",$/;"	s	object:VIMBINDS.VISUAL
selection_delete	settings.json	/^            "selection_delete": "BACKSPACE",$/;"	s	object:BASEBINDS.VISUAL
selection_delete	settings.json	/^            "selection_delete": "x",$/;"	s	object:VIMBINDS.VISUAL
selection_left	settings.json	/^            "selection_left": "ARROW_LEFT",$/;"	s	object:BASEBINDS.VISUAL
selection_lowercase	settings.json	/^            "selection_lowercase": "u",$/;"	s	object:VIMBINDS.VISUAL
selection_replace	settings.json	/^            "selection_replace": "r",$/;"	s	object:VIMBINDS.VISUAL
selection_right	settings.json	/^            "selection_right": "ARROW_RIGHT",$/;"	s	object:BASEBINDS.VISUAL
selection_uppercase	settings.json	/^            "selection_uppercase": "U",$/;"	s	object:VIMBINDS.VISUAL
send	client.py	/^    def send(self,message,endpoint='message'):$/;"	m	class:TeahazHelper
send	getch.py	/^    def send(self,key,_do_print=True):$/;"	m	class:InputField
set_attribute_for_id	pytermgui.py	/^def set_attribute_for_id(element_id,key,value):$/;"	f
set_borders	pytermgui.py	/^    def set_borders(self,border):$/;"	m	class:Container
set_chatroom	client.py	/^    def set_chatroom(self,url,index):$/;"	m	class:TeahazHelper
set_corner	pytermgui.py	/^    def set_corner(self,corner,value,offset=0):$/;"	m	class:Container
set_current_file	client.py	/^def set_current_file(value) -> None:$/;"	f	typeref:typename:None
set_cursor_visible	getch.py	/^    def set_cursor_visible(self,value):$/;"	m	class:InputField
set_debugger	pytermgui.py	/^def set_debugger(fun):$/;"	f
set_element_id	pytermgui.py	/^def set_element_id(element,element_id):$/;"	f
set_listener	pytermgui.py	/^def set_listener(event,func):$/;"	f
set_pipe	client.py	/^def set_pipe(fun,arg,keep=1) -> None:$/;"	f	typeref:typename:None
set_style	client.py	/^    def set_style(self,key,value):$/;"	m	class:InputDialogField
set_style	pytermgui.py	/^    def set_style(self,group,key,value):$/;"	m	class:Container
set_style	pytermgui.py	/^    def set_style(self,key,value):$/;"	m	class:Label
set_style	pytermgui.py	/^    def set_style(self,key,value):$/;"	m	class:Prompt
set_style	pytermgui.py	/^def set_style(key,value):$/;"	f
set_value	getch.py	/^    def set_value(self,target,cursor=None,highlight=True,force_cursor=False,do_print=True):$/;"	m	class:InputField
split_by_delimiters	client.py	/^def split_by_delimiters(s,return_indices=False) -> list:$/;"	f	typeref:typename:list
start_connection	client.py	/^def start_connection(contype,menu=None,**kwargs) -> int:$/;"	f	typeref:typename:int
strikethrough	client.py	/^strikethrough  =  Color.strikethrough$/;"	v
strikethrough	pytermgui.py	/^    def strikethrough(s):$/;"	m	class:Color
submit	client.py	/^    def submit(self):$/;"	m	class:InputDialog
submit	client.py	/^    def submit(self):$/;"	m	class:InputDialogField
submit	pytermgui.py	/^    def submit(self):$/;"	m	class:Prompt
success	settings.json	/^            "success": "76",$/;"	s	object:THEMES.draculite
switch_mode	client.py	/^def switch_mode(target) -> None:$/;"	f	typeref:typename:None
text	settings.json	/^        "text": "kitty -e sh vim {path}"$/;"	s	object:FILETYPE_DEFAULTS
th	client.py	/^    th = TeahazHelper()$/;"	v
till	settings.json	/^            "till": "t",$/;"	s	object:VIMBINDS.ESCAPE
till_reverse	settings.json	/^            "till_reverse": "T",$/;"	s	object:VIMBINDS.ESCAPE
timed	client.py	/^    timed = lambda: (time.sleep(ms\/1000),$/;"	f	function:do_after	file:
title	settings.json	/^            "title": "210",$/;"	s	object:THEMES.draculite
toggle_header	settings.json	/^            "toggle_header": " ",$/;"	s	object:VIMBINDS.ESCAPE
toggle_option	client.py	/^def toggle_option(options,current) -> any:$/;"	f	typeref:typename:any
top_left	settings.json	/^                "top_left": "\\u250c",$/;"	s	object:THEMES.draculite.corners
top_right	settings.json	/^                "top_right": "\\u2510",$/;"	s	object:THEMES.draculite.corners
ui	client.py	/^    ui = UIGenerator()$/;"	v
ui__button	settings.json	/^            "ui__button": {$/;"	o	object:THEMES.draculite
ui__file	settings.json	/^    "ui__file": "settings.json",$/;"	s
ui__nobutton	settings.json	/^        "ui__nobutton": {$/;"	o	object:THEMES
ui__nopadding_	settings.json	/^        "ui__nopadding_": 0,$/;"	n	object:THEMES
ui__padding	settings.json	/^            "ui__padding": 0,$/;"	n	object:THEMES.draculite
ui__prompt_options__colorscheme	settings.json	/^    "ui__prompt_options__colorscheme": [$/;"	a
ui__prompt_options__debug	settings.json	/^    "ui__prompt_options__debug": [$/;"	a
ui__prompt_options__delimiters	settings.json	/^            "ui__prompt_options__delimiters": [$/;"	a	object:THEMES.draculite
ui__prompt_options__keep_cursor	settings.json	/^    "ui__prompt_options__keep_cursor": [$/;"	a
ui__prompt_options__vimmode	settings.json	/^    "ui__prompt_options__vimmode": [$/;"	a
ui__prompt_options_highlight	settings.json	/^            "ui__prompt_options_highlight": [$/;"	a	object:THEMES.draculite
ui__title1	settings.json	/^            "ui__title1": "colors",$/;"	s	object:THEMES.draculite
ui__title1	settings.json	/^            "ui__title1": "modes & misc",$/;"	s	object:VIMBINDS.ESCAPE
ui__title1	settings.json	/^            "ui__title1": "modes & misc",$/;"	s	object:VIMBINDS.VISUAL
ui__title1	settings.json	/^    "ui__title1": "global",$/;"	s
ui__title2	settings.json	/^            "ui__title2": "characters",$/;"	s	object:THEMES.draculite
ui__title2	settings.json	/^            "ui__title2": "movement",$/;"	s	object:VIMBINDS.VISUAL
ui__title2	settings.json	/^            "ui__title2": "navigation",$/;"	s	object:VIMBINDS.ESCAPE
ui__title2	settings.json	/^    "ui__title2": "colors",$/;"	s
ui__title3	settings.json	/^            "ui__title3": "deletion & change",$/;"	s	object:VIMBINDS.ESCAPE
ui__title3	settings.json	/^            "ui__title3": "editing",$/;"	s	object:VIMBINDS.VISUAL
ui__title3	settings.json	/^    "ui__title3": "messaging",$/;"	s
ui__title4	settings.json	/^            "ui__title4": "clipboard",$/;"	s	object:VIMBINDS.ESCAPE
ui__title4	settings.json	/^    "ui__title4": "bindings",$/;"	s
underline	client.py	/^underline      =  Color.underline$/;"	v
underline	pytermgui.py	/^    def underline(s):$/;"	m	class:Color
upcoming checklist	README.md	/^## upcoming checklist$/;"	s	chapter:FEATURES
upcoming checklist	notes.md	/^## upcoming checklist$/;"	s	chapter:FEATURES
url	client.py	/^        url,chatroom = CURRENT_CHATROOM$/;"	v
url	client.py	/^        url,index = CURRENT_CHATROOM$/;"	v
value	client.py	/^        value = f"{url}: {SERVERS[url]['chatrooms'][index]}"$/;"	v
value	settings.json	/^                "value": "show color guide"$/;"	s	object:THEMES.draculite.ui__button
value	settings.json	/^            "value": "72",$/;"	s	object:THEMES.draculite
value	settings.json	/^            "value": "add new"$/;"	s	object:THEMES.ui__nobutton
video	settings.json	/^        "video": "mpv {path}",$/;"	s	object:FILETYPE_DEFAULTS
visual	getch.py	/^    def visual(self,start=None,end=None):$/;"	m	class:InputField
w	client.py	/^        w = Container(height=3)$/;"	v
wipe	client.py	/^    def wipe(self):$/;"	m	class:UIGenerator
wipe	client.py	/^    def wipe(self,yoffset=0):$/;"	m	class:ModeLabel
wipe	getch.py	/^    def wipe(self):$/;"	m	class:InputField
wipe	pytermgui.py	/^    def wipe(self,pos=None):$/;"	m	class:Container
wipe_all_containing	pytermgui.py	/^    def wipe_all_containing(self):$/;"	m	class:Container
~~	settings.json	/^                "~~": "strikethrough",$/;"	s	object:THEMES.draculite.message_styles
