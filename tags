!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BASE_DATA	client.py	/^BASE_DATA = {$/;"	v
CONTAINER_BORDER_CHARS	pytermgui.py	/^CONTAINER_BORDER_CHARS = lambda: "|-"$/;"	v
CONTAINER_BORDER_STYLE	pytermgui.py	/^CONTAINER_BORDER_STYLE = lambda item: item$/;"	v
CONTAINER_CORNER_STYLE	pytermgui.py	/^CONTAINER_CORNER_STYLE = lambda char: char$/;"	v
CONTAINER_ERROR_STYLE	pytermgui.py	/^CONTAINER_ERROR_STYLE = lambda item: Color.color(Color.bold(item),'38;5;196')$/;"	v
CONTAINER_LABEL_STYLE	pytermgui.py	/^CONTAINER_LABEL_STYLE = lambda item: item$/;"	v
CONTAINER_SUCCESS_STYLE	pytermgui.py	/^CONTAINER_SUCCESS_STYLE = lambda item: Color.color(Color.bold(item),'2')$/;"	v
CONTAINER_TITLE_STYLE	pytermgui.py	/^CONTAINER_TITLE_STYLE = lambda item: Color.italic(Color.bold(item))$/;"	v
CONTAINER_VALUE_STYLE	pytermgui.py	/^CONTAINER_VALUE_STYLE = lambda item: item$/;"	v
CONV_HEADER	client.py	/^    CONV_HEADER = Container(width=int(WIDTH*0.75),dynamic_size=False)$/;"	v	class:UIGenerator
CONV_HEADER_LABEL	client.py	/^    CONV_HEADER_LABEL = Label(justify='center')$/;"	v	class:UIGenerator
CURRENT_FILE	client.py	/^CURRENT_FILE = None$/;"	v
CURSOR_HIGHLIGHT_STYLE	pytermgui.py	/^CURSOR_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE$/;"	v
Color	pytermgui.py	/^class Color:$/;"	c
Container	pytermgui.py	/^class Container:$/;"	c
DEFAULT_COLOR_PREFIX	pytermgui.py	/^DEFAULT_COLOR_PREFIX = "38;5"$/;"	v
DELIMITERS	client.py	/^DELIMITERS = "!@#$%^&*()[]{}|\\\\;':\\",.<>\/? \\t"$/;"	v
ELEMENT_ATTRIBUTES	pytermgui.py	/^ELEMENT_ATTRIBUTES = {}$/;"	v
ELEMENT_IDS	pytermgui.py	/^ELEMENT_IDS = {}$/;"	v
GLOBAL_HIGHLIGHT_STYLE	pytermgui.py	/^GLOBAL_HIGHLIGHT_STYLE = Color.highlight$/;"	v
INPUT	client.py	/^INPUT = ""$/;"	v
INPUT_CURSOR	client.py	/^INPUT_CURSOR = 0$/;"	v
InputDialog	client.py	/^class InputDialog(Container):$/;"	c
InputDialogField	client.py	/^class InputDialogField(getch.InputField):$/;"	c
InputField	getch.py	/^class InputField:$/;"	c
KEEP_GOING	client.py	/^KEEP_GOING = True$/;"	v
KEEP_PIPE	client.py	/^KEEP_PIPE = False$/;"	v
LABEL_VALUE_STYLE	pytermgui.py	/^LABEL_VALUE_STYLE = lambda item: item$/;"	v
LOGFILE	client.py	/^LOGFILE = os.path.join(PATH,'log')$/;"	v
LOGIN_SCREEN	login.py	/^LOGIN_SCREEN = {$/;"	v
Label	pytermgui.py	/^class Label:$/;"	c
MAX_MESSAGE_WIDTH	client.py	/^MAX_MESSAGE_WIDTH = lambda: int(WIDTH*4\/10)$/;"	v
MENUS	client.py	/^MENUS = [$/;"	v
MESSAGES	client.py	/^    MESSAGES = json.loads(th.get(0))$/;"	v	class:UIGenerator
MESSAGES	client.py	/^MESSAGES = []$/;"	v
MESSAGE_TEMPLATE	client.py	/^MESSAGE_TEMPLATE = {$/;"	v
MODE_LABEL	client.py	/^    MODE_LABEL = Label('-- ESCAPE --',justify='left')$/;"	v	class:UIGenerator
OSReadWrapper	getch.py	/^class OSReadWrapper(object):$/;"	c
PATH	client.py	/^PATH = os.path.abspath(os.path.dirname(__file__))$/;"	v
PATH	login.py	/^PATH = os.path.abspath(os.path.dirname(__file__))$/;"	v
PIPE_ARGS	client.py	/^PIPE_ARGS = {}$/;"	v
PIPE_OUTPUT	client.py	/^PIPE_OUTPUT = None$/;"	v
PREV_GET	client.py	/^PREV_GET = None$/;"	v
PREV_MESSAGES	client.py	/^PREV_MESSAGES = []$/;"	v
PROMPT_DELIMITER_STYLE	pytermgui.py	/^PROMPT_DELIMITER_STYLE = lambda: '[]'$/;"	v
PROMPT_HIGHLIGHT_STYLE	pytermgui.py	/^PROMPT_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE$/;"	v
PROMPT_LABEL_STYLE	pytermgui.py	/^PROMPT_LABEL_STYLE = lambda item: item$/;"	v
PROMPT_VALUE_STYLE	pytermgui.py	/^PROMPT_VALUE_STYLE = lambda item: item$/;"	v
Prompt	pytermgui.py	/^class Prompt:$/;"	c
SESSIONLOCATION	client.py	/^    SESSIONLOCATION = os.path.join(PATH,'session.obj')$/;"	v	class:UIGenerator
TABBAR_HIGHLIGHT_STYLE	pytermgui.py	/^TABBAR_HIGHLIGHT_STYLE = GLOBAL_HIGHLIGHT_STYLE$/;"	v
TeahazHelper	client.py	/^class TeahazHelper:$/;"	c
ThreadWithReturnValue	client.py	/^class ThreadWithReturnValue(threading.Thread):$/;"	c
UIGenerator	client.py	/^class UIGenerator:$/;"	c
UI_TRACE	client.py	/^UI_TRACE = [[return_to_infield,{},'']]$/;"	v
URL	client.py	/^URL = None$/;"	v
VERBOSE	pytermgui.py	/^VERBOSE = 0$/;"	v
VISUAL_END	client.py	/^VISUAL_END = 0$/;"	v
VISUAL_START	client.py	/^VISUAL_START = 0$/;"	v
_Getch	getch.py	/^class _Getch:$/;"	c
_GetchUnix	getch.py	/^class _GetchUnix:$/;"	c
_GetchWindows	getch.py	/^class _GetchWindows:$/;"	c
__call__	getch.py	/^    def __call__(self):$/;"	m	class:_Getch	file:
__call__	getch.py	/^    def __call__(self):$/;"	m	class:_GetchUnix	file:
__call__	getch.py	/^    def __call__(self):$/;"	m	class:_GetchWindows	file:
__init__	client.py	/^    def __init__(self,**kwargs):$/;"	m	class:InputDialogField
__init__	client.py	/^    def __init__(self,**kwargs):$/;"	m	class:ThreadWithReturnValue
__init__	client.py	/^    def __init__(self,options=None,label_value='',label_justify="center",label_underpad=0,field_value='',dialog_type=None,**kwargs):$/;"	m	class:InputDialog
__init__	getch.py	/^    def __init__(self):$/;"	m	class:_Getch
__init__	getch.py	/^    def __init__(self):$/;"	m	class:_GetchUnix
__init__	getch.py	/^    def __init__(self):$/;"	m	class:_GetchWindows
__init__	getch.py	/^    def __init__(self, stream, encoding=None):$/;"	m	class:OSReadWrapper
__init__	getch.py	/^    def __init__(self,pos=None,linecap=0,default="",xlimit=None,ylimit=None,print_at_start=False):$/;"	m	class:InputField
__init__	pytermgui.py	/^    def __init__(self,pos=None,border=None,width=None,height=None,dynamic_size=True,center_elements=True,padding=0):$/;"	m	class:Container
__init__	pytermgui.py	/^    def __init__(self,value="",justify="center",width=None,padding=1):$/;"	m	class:Label
__init__	pytermgui.py	/^    def __init__(self,width=None,options=None,label=None,real_label=None,justify_options='center',value="",padding=0): $/;"	m	class:Prompt
__repr__	client.py	/^    def __repr__(self):$/;"	m	class:InputDialog	file:
__repr__	client.py	/^    def __repr__(self):$/;"	m	class:InputDialogField	file:
__repr__	pytermgui.py	/^    def __repr__(self):$/;"	m	class:Container	file:
__repr__	pytermgui.py	/^    def __repr__(self):$/;"	m	class:Label	file:
__repr__	pytermgui.py	/^    def __repr__(self):$/;"	m	class:Prompt	file:
_add_element	pytermgui.py	/^    def _add_element(self,element):$/;"	m	class:Container
_connect	client.py	/^    def _connect(*args,**kwargs):$/;"	f	function:start_connection
_do_operation	client.py	/^        def _do_operation(*args,**kwargs):$/;"	f	function:TeahazHelper.handle_operation
_get_option_highlight	pytermgui.py	/^    def _get_option_highlight(self,index):$/;"	m	class:Prompt
_handle_long_element	pytermgui.py	/^    def _handle_long_element(self,e):$/;"	m	class:Container
_repr_pre	pytermgui.py	/^    def _repr_pre(self):$/;"	m	class:Container
_selection_changed	pytermgui.py	/^    def _selection_changed(self,index):$/;"	m	class:Container
_window_size_changed	pytermgui.py	/^    def _window_size_changed(self):$/;"	m	class:Container
add_elements	pytermgui.py	/^    def add_elements(self,elements):$/;"	m	class:Container
add_new_colorscheme	client.py	/^def add_new_colorscheme(name="new") -> dict:$/;"	f
add_new_server	client.py	/^    def add_new_server(self,values):$/;"	m	class:TeahazHelper
add_to_trace	client.py	/^def add_to_trace(arr) -> None:$/;"	f
bold	client.py	/^bold           =  Color.bold$/;"	v
bold	pytermgui.py	/^    def bold(s):$/;"	m	class:Color
break_line	pytermgui.py	/^def break_line(_inline,_len,_pad=0,_separator=' ',do_subdivision=True):$/;"	f
buffer	getch.py	/^    def buffer(self):$/;"	m	class:OSReadWrapper
c	login.py	/^c = container_from_dict(LOGIN_SCREEN)[0]$/;"	v
c	pytermgui.py	/^    c = container_from_dict(d)[0]$/;"	v
c	sprinter.py	/^c = container_from_dict(d)[0]$/;"	v
center	pytermgui.py	/^    def center(self,axes="both",xoffset=0,yoffset=5):$/;"	m	class:Container
clean_ansi	pytermgui.py	/^def clean_ansi(s):$/;"	f
clear_value	getch.py	/^    def clear_value(self):$/;"	m	class:InputField
clr	pytermgui.py	/^def clr():$/;"	f
color	client.py	/^color          =  Color.color$/;"	v
color	pytermgui.py	/^    def color(s,col,reset=True):$/;"	m	class:Color
container_from_dict	pytermgui.py	/^def container_from_dict(dic,padding=4,**kwargs):$/;"	f
context	getch.py	/^    def context(self):$/;"	m	class:_GetchUnix
create_address_picker	client.py	/^    def create_address_picker(self,caller_prompt):$/;"	m	class:UIGenerator
create_colormenu	client.py	/^    def create_colormenu(self,dict_index=0):$/;"	m	class:UIGenerator
create_error_dialog	client.py	/^    def create_error_dialog(self,text,button="ignore",handler=None):$/;"	m	class:UIGenerator
create_menu	client.py	/^    def create_menu(self,source,corners=[None]*4,width=None,index=None,dict_index=0,**container_args):$/;"	m	class:UIGenerator
create_menu_picker	client.py	/^    def create_menu_picker(self):$/;"	m	class:UIGenerator
create_server_picker	client.py	/^    def create_server_picker(self):$/;"	m	class:UIGenerator
create_submenu	client.py	/^    def create_submenu(self,source,index=None,dict_index=0):$/;"	m	class:UIGenerator
create_success_dialog	client.py	/^    def create_success_dialog(self,text,button="dismiss"):$/;"	m	class:UIGenerator
d	pytermgui.py	/^    d = d[0]$/;"	v
d	pytermgui.py	/^    d = r.json()$/;"	v
d	sprinter.py	/^d = d[0]$/;"	v
d	sprinter.py	/^d = r.json()$/;"	v
dbg	client.py	/^def dbg(*args,do_color=True) -> None:$/;"	f
dbg	pytermgui.py	/^def dbg(*args,**kwargs):$/;"	f
decode	client.py	/^def decode(a):$/;"	f
do_after	client.py	/^def do_after(ms,fun,control='true',args={}) -> None:$/;"	f
do_in	client.py	/^def do_in(param, action) -> None:$/;"	f
edit_json	client.py	/^def edit_json(json_path,key,value) -> None:$/;"	f
empty_dict	client.py	/^    def empty_dict(d) -> dict:$/;"	f	function:add_new_colorscheme
encode	client.py	/^def encode(a):$/;"	f
encode_binary	client.py	/^def encode_binary(a):$/;"	f
event__window_size_changed	pytermgui.py	/^def event__window_size_changed(caller,new,old):$/;"	f
export	pytermgui.py	/^    def export(self,filename):$/;"	m	class:Container
fileno	getch.py	/^    def fileno(self):$/;"	m	class:OSReadWrapper
find	client.py	/^def find(key,offset=0,reverse=False) -> None:$/;"	f
get	client.py	/^    def get(self,parameter,mode="message"):$/;"	m	class:TeahazHelper
get_border	pytermgui.py	/^    def get_border(self):$/;"	m	class:Container
get_caller	client.py	/^def get_caller(depth=1):$/;"	f
get_chars	getch.py	/^    def get_chars(self):$/;"	m	class:_GetchUnix
get_gradient	client.py	/^get_gradient   =  Color.get_gradient$/;"	v
get_gradient	pytermgui.py	/^    def get_gradient(include,direction='vertical'):$/;"	m	class:Color
get_index	client.py	/^def get_index(obj) -> int:$/;"	f
get_indices	client.py	/^def get_indices(param) -> tuple:$/;"	f
get_infield_pos	client.py	/^def get_infield_pos(reprint_messages=True) -> list:$/;"	f
get_loop	client.py	/^    def get_loop(self):$/;"	m	class:TeahazHelper
get_loop	client.py	/^    get_loop = threading.Thread(target=th.get_loop,name='get_loop')$/;"	v	class:UIGenerator
get_object_by_id	pytermgui.py	/^def get_object_by_id(key):$/;"	f
getch	getch.py	/^getch = _Getch()$/;"	v
getch_loop	client.py	/^def getch_loop() -> None: $/;"	f
gradient	client.py	/^gradient       =  Color.gradient$/;"	v
gradient	pytermgui.py	/^    def gradient(text,color,layer='fg'):$/;"	m	class:Color
handle_action	client.py	/^def handle_action(action) -> None:$/;"	f
handle_menu	client.py	/^def handle_menu(key,obj,attributes={},page=0) -> None:$/;"	f
handle_menu_actions	client.py	/^def handle_menu_actions(action,current_file=None) -> int: $/;"	f
handle_operation	client.py	/^    def handle_operation(self,method,output,*args,**kwargs):$/;"	m	class:TeahazHelper
highlight	client.py	/^highlight      =  Color.highlight$/;"	v
highlight	pytermgui.py	/^    def highlight(s,fg=None):$/;"	m	class:Color
ignore_input	client.py	/^def ignore_input(*args):$/;"	f
import_json	client.py	/^def import_json(name) -> None:$/;"	f
import_settings	login.py	/^def import_settings():$/;"	f
infield	client.py	/^    infield = getch.InputField(pos=get_infield_pos())$/;"	v	class:UIGenerator
infield	getch.py	/^    infield = InputField(default="Welcome!")$/;"	v
is_connected	client.py	/^    def is_connected(self,url):$/;"	m	class:TeahazHelper
is_in_last_word	client.py	/^def is_in_last_word(index,string) -> bool:$/;"	f
is_set	client.py	/^def is_set(var,scope=None) -> bool:$/;"	f
is_set	login.py	/^def is_set(var,scope=None):$/;"	f
italic	client.py	/^italic         =  Color.italic$/;"	v
italic	pytermgui.py	/^    def italic(s):$/;"	m	class:Color
join	client.py	/^    def join(self,timeout=None):$/;"	m	class:ThreadWithReturnValue
load_path	client.py	/^def load_path(path,key=None) -> dict:$/;"	f
login_or_register	client.py	/^def login_or_register(contype,url,data) -> None:$/;"	f
merge	client.py	/^def merge(one,two) -> dict:$/;"	f
move	pytermgui.py	/^    def move(self,pos,wipe=False):$/;"	m	class:Container
old_print_messages	client.py	/^    def old_print_messages(self,extras=[],reprint=False):$/;"	m	class:TeahazHelper
parse_color	client.py	/^def parse_color(_color,s,level=0) -> types.FunctionType:$/;"	f
parse_inline_codes	client.py	/^def parse_inline_codes(s) -> str:$/;"	f
perspective	pytermgui.py	/^def perspective(color,index):$/;"	f
print	getch.py	/^    def print(self,return_line=False,flush=True,highlight=True):$/;"	m	class:InputField
print_messages	client.py	/^    def print_messages(self,messages=[],extras=[],reprint=False):$/;"	m	class:TeahazHelper
r	pytermgui.py	/^    r = requests.get('https:\/\/online.sprinter.hu\/terkep\/data.json')$/;"	v
r	sprinter.py	/^r = requests.get('https:\/\/online.sprinter.hu\/terkep\/data.json')$/;"	v
read	getch.py	/^    def read(self, chars):$/;"	m	class:OSReadWrapper
real_length	pytermgui.py	/^def real_length(s):$/;"	f
replace	client.py	/^def replace(key,action) -> None:$/;"	f
return_to_infield	client.py	/^def return_to_infield(*args,**kwargs) -> None:$/;"	f
reverse_dict_lookup	client.py	/^def reverse_dict_lookup(d,value) -> [dict,None]:$/;"	f
run	client.py	/^    def run(self):$/;"	m	class:ThreadWithReturnValue
select	pytermgui.py	/^    def select(self,index=0):$/;"	m	class:Prompt
select	pytermgui.py	/^    def select(self,index=None):$/;"	m	class:Container
send	client.py	/^    def send(self,message,endpoint='message'):$/;"	m	class:TeahazHelper
send	getch.py	/^    def send(self,key,_do_print=True):$/;"	m	class:InputField
set_attribute_for_id	pytermgui.py	/^def set_attribute_for_id(element_id,key,value):$/;"	f
set_borders	pytermgui.py	/^    def set_borders(self,border):$/;"	m	class:Container
set_chatroom	client.py	/^    def set_chatroom(self,url,index):$/;"	m	class:TeahazHelper
set_corner	pytermgui.py	/^    def set_corner(self,corner,value,offset=0):$/;"	m	class:Container
set_current_file	client.py	/^def set_current_file(value) -> None:$/;"	f
set_cursor_visible	getch.py	/^    def set_cursor_visible(self,value):$/;"	m	class:InputField
set_debugger	pytermgui.py	/^def set_debugger(fun):$/;"	f
set_element_id	pytermgui.py	/^def set_element_id(element,element_id):$/;"	f
set_listener	pytermgui.py	/^def set_listener(event,func):$/;"	f
set_pipe	client.py	/^def set_pipe(fun,arg,keep=1) -> None:$/;"	f
set_style	client.py	/^    def set_style(self,key,value):$/;"	m	class:InputDialogField
set_style	pytermgui.py	/^    def set_style(self,group,key,value):$/;"	m	class:Container
set_style	pytermgui.py	/^    def set_style(self,key,value):$/;"	m	class:Label
set_style	pytermgui.py	/^    def set_style(self,key,value):$/;"	m	class:Prompt
set_style	pytermgui.py	/^def set_style(key,value):$/;"	f
set_value	getch.py	/^    def set_value(self,target,cursor=None,highlight=True,force_cursor=False,do_print=True):$/;"	m	class:InputField
split_by_delimiters	client.py	/^def split_by_delimiters(s,return_indices=False) -> list:$/;"	f
start_connection	client.py	/^def start_connection(contype,menu=None,**kwargs) -> int:$/;"	f
strikethrough	client.py	/^strikethrough  =  Color.strikethrough$/;"	v
strikethrough	pytermgui.py	/^    def strikethrough(s):$/;"	m	class:Color
submit	client.py	/^    def submit(self):$/;"	m	class:InputDialog
submit	client.py	/^    def submit(self):$/;"	m	class:InputDialogField
submit	pytermgui.py	/^    def submit(self):$/;"	m	class:Prompt
switch_mode	client.py	/^def switch_mode(target) -> None:$/;"	f
th	client.py	/^    th = TeahazHelper()$/;"	v	class:UIGenerator
toggle_option	client.py	/^def toggle_option(options,current) -> any:$/;"	f
ui	client.py	/^    ui = UIGenerator()$/;"	v	class:UIGenerator
underline	client.py	/^underline      =  Color.underline$/;"	v
underline	pytermgui.py	/^    def underline(s):$/;"	m	class:Color
visual	getch.py	/^    def visual(self,start=None,end=None):$/;"	m	class:InputField
wipe	client.py	/^    def wipe(self):$/;"	m	class:UIGenerator
wipe	getch.py	/^    def wipe(self):$/;"	m	class:InputField
wipe	pytermgui.py	/^    def wipe(self,pos=None):$/;"	m	class:Container
wipe_all_containing	pytermgui.py	/^    def wipe_all_containing(self):$/;"	m	class:Container
